View(out)
min(long_bin)
min(out$long_bin)
max(out$long_bin)
min(out$lat_bin)
max(out$lat_bin)
for(w in 1){
x <- filter(weekly, week == w) |>
ungroup() |>
select(long_bin, lat_bin, year, n_lists)
# this is part of df_to_mat
out <- tidyr::complete(x,
long_bin = 1:200,
lat_bin = 1:200) |>
dplyr::arrange(long_bin, lat_bin)
print(dim(out))
#store[,,w] <- matrix(out$observation_count, nrow = 200, ncol = 200, byrow = TRUE)
}
x <- filter(weekly, week == w) |>
ungroup() |>
select(long_bin, lat_bin, year, n_lists)
# this is part of df_to_mat
out <- tidyr::complete(x,
nesting(year),
long_bin = 1:200,
lat_bin = 1:200) |>
dplyr::arrange(long_bin, lat_bin)
for(w in 1){
x <- filter(weekly, week == w) |>
ungroup() |>
select(long_bin, lat_bin, year, n_lists)
# this is part of df_to_mat
out <- tidyr::complete(x,
tidyr::nesting(year),
long_bin = 1:200,
lat_bin = 1:200) |>
dplyr::arrange(long_bin, lat_bin)
print(dim(out))
#store[,,w] <- matrix(out$observation_count, nrow = 200, ncol = 200, byrow = TRUE)
}
View(out)
560000/(200*200)
for(w in 1){
x <- ungroup(weekly) |>
select(long_bin, lat_bin, year, n_lists)
# this is part of df_to_mat
out <- tidyr::complete(x,
tidyr::nesting(week, year),
long_bin = 1:200,
lat_bin = 1:200) |>
dplyr::arrange(long_bin, lat_bin)
print(dim(out))
}
for(w in 1){
x <- ungroup(weekly) |>
select(long_bin, lat_bin, year, week, n_lists)
# this is part of df_to_mat
out <- tidyr::complete(x,
tidyr::nesting(week, year),
long_bin = 1:200,
lat_bin = 1:200) |>
dplyr::arrange(long_bin, lat_bin)
print(dim(out))
}
52*14*200*200
for(w in 1){
x <- ungroup(weekly) |>
select(long_bin, lat_bin, year, week, n_lists)
# this is part of df_to_mat
out <- tidyr::complete(x,
tidyr::nesting(year),
long_bin = 1:200,
lat_bin = 1:200,
week = 1:52) |>
dplyr::arrange(long_bin, lat_bin)
print(dim(out))
}
52*14*200*200
for(w in 1){
x <- ungroup(weekly) |>
select(long_bin, lat_bin, year, week, n_lists)
# this is part of df_to_mat
out <- tidyr::complete(x,
tidyr::nesting(year, week = 1:52),
long_bin = 1:200,
lat_bin = 1:200) |>
dplyr::arrange(long_bin, lat_bin)
print(dim(out))
}
for(w in 1){
x <- ungroup(weekly) |>
select(long_bin, lat_bin, year, week, n_lists)
# this is part of df_to_mat
out <- tidyr::complete(x,
tidyr::nesting(year, week),
long_bin = 1:200,
lat_bin = 1:200) |>
dplyr::arrange(long_bin, lat_bin)
print(dim(out))
}
52*14*200*200
out <- tidyr::complete(x, tidyr::nesting(year),
week = 1:52) |>
tidyr::complete(x, tidyr::nesting(year, week),
long_bin = 1:200,
lat_bin = 1:200)
out <- tidyr::complete(x, tidyr::nesting(year),
week = 1:52) |>
tidyr::complete(tidyr::nesting(year, week),
long_bin = 1:200,
lat_bin = 1:200)
View(out)
dim(out)
52*14*200*200
length(x$year)
length(unique(x$year))
out <- tidyr::expand(x,
tidyr::nesting(year),
week = 1:52,
long_bin = 1:200,
lat_bin = 1:200) |>
dplyr::arrange(week, year, long_bin, lat_bin)
out
dim(out)
52*14*200*200
make_mats <- function(df, over){
x <- ungroup(df)
out <- tidyr::expand(x,
tidyr::nesting(year),
week = 1:52,
long_bin = 1:200,
lat_bin = 1:200) |>
dplyr::filter(week = over) |>
dplyr::arrange(long_bin, lat_bin)
return(str(out))
}
make_mats(weekly, 1)
make_mats <- function(df, over){
x <- ungroup(df)
out <- tidyr::expand(x,
tidyr::nesting(year),
week = 1:52,
long_bin = 1:200,
lat_bin = 1:200) |>
dplyr::filter(week == over) |>
dplyr::arrange(long_bin, lat_bin)
return(str(out))
}
make_mats(weekly, 1)
make_mats <- function(df, over){
x <- ungroup(df)
out <- tidyr::expand(x,
tidyr::nesting(year),
week = 1:52,
long_bin = 1:200,
lat_bin = 1:200) |>
right_join(x)
# dplyr::filter(week == over) |>
#  dplyr::arrange(long_bin, lat_bin)
return(str(out))
}
make_mats(weekly, 1)
out <- tidyr::expand(x,
tidyr::nesting(year),
week = 1:52,
long_bin = 1:200,
lat_bin = 1:200) |>
right_join(select(x, long_bin, lat_bin, year, week, observation_count))
make_mats <- function(df, over){
x <- ungroup(df)
out <- tidyr::expand(x,
tidyr::nesting(year),
week = 1:52,
long_bin = 1:200,
lat_bin = 1:200) |>
right_join(select(x, long_bin, lat_bin, year, week, observation_count))
# dplyr::filter(week == over) |>
#  dplyr::arrange(long_bin, lat_bin)
return(str(out))
}
make_mats(weekly, 1)
make_mats <- function(df, over){
x <- ungroup(df)
out <- tidyr::expand(x,
tidyr::nesting(year),
week = 1:52,
long_bin = 1:200,
lat_bin = 1:200) |>
right_join(select(x, long_bin, lat_bin, year, week, observation_count))
dplyr::filter(week == over) |>
dplyr::arrange(long_bin, lat_bin)
return(str(out))
}
make_mats(weekly, 1)
make_mats <- function(df, over){
x <- ungroup(df)
out <- tidyr::expand(x,
tidyr::nesting(year),
week = 1:52,
long_bin = 1:200,
lat_bin = 1:200) |>
right_join(select(x, long_bin, lat_bin, year, week, observation_count)) |>
dplyr::filter(week == over) |>
dplyr::arrange(long_bin, lat_bin)
return(str(out))
}
make_mats(weekly, 1)
14*200*200
make_mats <- function(df, over){
x <- ungroup(df)
out <- tidyr::expand(x,
tidyr::nesting(year),
week = 1:52,
long_bin = 1:200,
lat_bin = 1:200) |>
full_join(select(x, long_bin, lat_bin, year, week, observation_count)) |>
dplyr::filter(week == over) |>
dplyr::arrange(long_bin, lat_bin)
return(str(out))
}
make_mats(weekly, 1)
make_mats <- function(df, over){
x <- ungroup(df)
out <- tidyr::expand(x,
tidyr::nesting(year),
week = 1:52,
long_bin = 1:200,
lat_bin = 1:200) |>
dplyr::full_join(dplyr::select(x,
long_bin,
lat_bin,
year,
week,
observation_count)) |>
dplyr::filter(week == over) |>
dplyr::arrange(long_bin, lat_bin)
out <- matrix(out$observation_count, nrow = 200, ncol = 200, byrow = TRUE)
return(out)
}
make_mats(weekly, 1)
make_mats <- function(df, over){
x <- ungroup(df)
foo <- tidyr::expand(x,
tidyr::nesting(year),
week = 1:52,
long_bin = 1:200,
lat_bin = 1:200) |>
dplyr::full_join(dplyr::select(x,
long_bin,
lat_bin,
year,
week,
observation_count)) |>
dplyr::filter(week == over) |>
dplyr::arrange(long_bin, lat_bin)
arr <- array(foo$observation_count, dim = c(200, 200, 14))
return(arr)
}
make_mats(weekly, 1)
make_mats <- function(df, over){
x <- ungroup(df)
foo <- tidyr::expand(x,
tidyr::nesting(year),
week = 1:52,
long_bin = 1:200,
lat_bin = 1:200) |>
dplyr::full_join(dplyr::select(x,
long_bin,
lat_bin,
year,
week,
observation_count)) |>
dplyr::filter(week == over) |>
dplyr::arrange(long_bin, lat_bin)
arr <- array(foo$observation_count, dim = c(200, 200, 14))
return(str(arr))
}
make_mats(weekly, 1)
?apply
make_mats <- function(df, over){
x <- ungroup(df)
foo <- tidyr::expand(x,
tidyr::nesting(year),
week = 1:52,
long_bin = 1:200,
lat_bin = 1:200) |>
dplyr::full_join(dplyr::select(x,
long_bin,
lat_bin,
year,
week,
observation_count)) |>
dplyr::filter(week == over) |>
dplyr::arrange(long_bin, lat_bin)
arr <- array(foo$observation_count, dim = c(200, 200, 14))
str(arr)
out <- apply(arr, MARGIN = 3, FUN = mean, na.rm = TRUE)
dim(out)
}
make_mats
make_mats(weekly, 1)
make_mats <- function(df, over){
x <- ungroup(df)
foo <- tidyr::expand(x,
tidyr::nesting(year),
week = 1:52,
long_bin = 1:200,
lat_bin = 1:200) |>
dplyr::full_join(dplyr::select(x,
long_bin,
lat_bin,
year,
week,
observation_count)) |>
dplyr::filter(week == over) |>
dplyr::arrange(long_bin, lat_bin)
arr <- array(foo$observation_count, dim = c(200, 200, 14))
return(arr)
}
x <- make_mats(weekly, 1)
rm(store)
apply(x, 3, mean())
apply(x, 3, mean, na.rm = TRUE)
apply(x, c(1,2), mean, na.rm = TRUE)
apply(x, c(1,2), mean, na.rm = TRUE) |> dim()
make_mats <- function(df, over){
x <- ungroup(df)
foo <- tidyr::expand(x,
tidyr::nesting(year),
week = 1:52,
long_bin = 1:200,
lat_bin = 1:200) |>
dplyr::full_join(dplyr::select(x,
long_bin,
lat_bin,
year,
week,
observation_count)) |>
dplyr::filter(week == over) |>
dplyr::arrange(long_bin, lat_bin)
arr <- array(foo$observation_count, dim = c(200, 200, 14))
out <- apply(arr, c(1, 2), mean, na.rm = TRUE)
return(out)
}
make_mats(weekly, over)
make_mats(weekly, 1)
x <- make_mats(weekly, 1)
image(x)
mean(c(NA, NA), na.rm = TRUE)
# add week, year columns
weekly <- subsample |> filter(species_code == opt$s,
lubridate::year(observation_date) >= 2010) |>
select(long_bin,
lat_bin,
species_code,
observation_count,
species_observed,
observation_date
) |>
mutate(week = lubridate::week(observation_date),
year = lubridate::year(observation_date)) |>
group_by(long_bin, lat_bin, week, year) |>
summarize(observation_count = sum(observation_count),
species_observed = sum(species_observed),
n_lists = n(),
obs_freq = species_observed/n_lists)
make_mats <- function(df, over){
x <- ungroup(df)
foo <- tidyr::expand(x,
tidyr::nesting(year),
week = 1:52,
long_bin = 1:200,
lat_bin = 1:200) |>
dplyr::full_join(dplyr::select(x,
long_bin,
lat_bin,
year,
week,
obs_freq)) |>
dplyr::filter(week == over) |>
dplyr::arrange(long_bin, lat_bin)
arr <- array(foo$obs_freq, dim = c(200, 200, 14))
out <- apply(arr, c(1, 2), mean, na.rm = TRUE)
return(out)
}
make_mats(weekly, 1)
x <- make_mats(weekly, 1)
image(x)
?array
array(1:30, c(2, 3, 5))
array(1:20, c(2, 5, 2))
array(1:8, c(2, 2, 2))
test <0 array(1:8, c(2, 2, 2))
test <- array(1:8, c(2, 2, 2))
aperm(test)
aperm(test, c(2, 1, 3))
make_mats <- function(df, over){
x <- ungroup(df)
foo <- tidyr::expand(x,
tidyr::nesting(year),
week = 1:52,
long_bin = 1:200,
lat_bin = 1:200) |>
dplyr::full_join(dplyr::select(x,
long_bin,
lat_bin,
year,
week,
obs_freq)) |>
dplyr::filter(week == over) |>
dplyr::arrange(long_bin, lat_bin)
arr <- array(foo$obs_freq, dim = c(200, 200, 14)) |>
aperm(c(2, 1, 3))
out <- apply(arr, c(1, 2), mean, na.rm = TRUE)
return(out)
}
make_mats <- function(df, over){
x <- ungroup(df)
foo <- tidyr::expand(x,
tidyr::nesting(year),
week = 1:52,
long_bin = 1:200,
lat_bin = 1:200) |>
dplyr::full_join(dplyr::select(x,
long_bin,
lat_bin,
year,
week,
obs_freq)) |>
dplyr::filter(week == over) |>
dplyr::arrange(year, lat_bin, long_bin)
arr <- array(foo$obs_freq, dim = c(200, 200, 14))
out <- apply(arr, c(1, 2), mean, na.rm = TRUE)
return(out)
}
x <- make_mat(weekly, 1)
x <- make_mats(weekly, 1)
image(x)
y <- purrr::map(1:52, \(x) make_mats(weekly, over = x))
y <- purrr::map(1:5, \(x) make_mats(weekly, over = x))
View(y)
wks <- rep('', 52)
for(i in 1:52){
wks[i] <- paste0('wk', i)
}
wks <- rep('', 52)
for(i in 1:52){
wks[i] <- paste0('wk', i)
}
y <- purrr::map(1:52, \(x) make_mats(weekly, over = x)) |>
purrr::set_names(wks)
y <- purrr::map(1:5, \(x) make_mats(weekly, over = x)) |>
purrr::set_names(wks[1:5])
View(y)
source("~/Library/CloudStorage/OneDrive-BowdoinCollege/Documents/ebird_project/fiscro/01functions.R", echo=TRUE)
library(dplyr)
library(optparse)
## functions ----
source('01functions.R')
# Load Data ====================================================================
# testing purposes:
opt <- list(s = 'fiscro')
load('./processed_data/subsample.RData')
# add week, year columns
weekly <- subsample |> filter(species_code == opt$s,
lubridate::year(observation_date) >= 2010) |>
select(long_bin,
lat_bin,
species_code,
observation_count,
species_observed,
observation_date
) |>
mutate(week = lubridate::week(observation_date),
year = lubridate::year(observation_date)) |>
group_by(long_bin, lat_bin, week, year) |>
summarize(observation_count = sum(observation_count),
species_observed = sum(species_observed),
n_lists = n(),
obs_freq = species_observed/n_lists)
source("~/Library/CloudStorage/OneDrive-BowdoinCollege/Documents/ebird_project/fiscro/01functions.R", echo=TRUE)
# beta-ing apply ====
x <- df_to_mat(weekly, over = 1, nest_by = 'wk')
source("~/Library/CloudStorage/OneDrive-BowdoinCollege/Documents/ebird_project/fiscro/01functions.R", echo=TRUE)
# beta-ing apply ====
x <- df_to_mat(weekly, over = 1, nest_by = 'week')
image()
image(x)
# beta-ing apply ====
avg_mats <- purrr::map(1:52, \(x) df_to_mat(weekly, over = x, nest_by = 'week')) |>
purrr::set_names(wks)
# beta-ing apply ====
avg_mats <- purrr::map(1:5, \(x) df_to_mat(weekly, over = x, nest_by = 'week')) |>
purrr::set_names(wks[1:5])
wks <- rep('', 52)
for(i in 1:52){
wks[i] <- paste0('wk', i)
}
# beta-ing apply ====
avg_mats <- purrr::map(1:5, \(x) df_to_mat(weekly, over = x, nest_by = 'week')) |>
purrr::set_names(wks[1:5])
View(avg_mats)
cols <- viridis::viridis(200, option = 'inferno')
image(avg_mats$wk1, col = col)
image(avg_mats$wk1, col = cols)
?image
image(avg_mats$wk1, col = cols)
smoothed <- lapply(avg_mats, geom_smooth)
image(smoothed$wk1, col = cols)
image(log10(smoothed$wk1+1e-3), col = cols)
image(log10(avg_mats$wk1+1e-3), col = cols)
View(geom_smooth)
